{"version":3,"file":"app.component.js","sourceRoot":"","sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAwB,eAAe,CAAC,CAAA;AACxC,4BAAyB,eAAe,CAAC,CAAA;AACzC,6EAA6E;AAC7E,8FAA8F;AAE9F,gCAAwB,+BAA+B,CAAC,CAAA;AACxD,+BAAuB,6BAA6B,CAAC,CAAA;AACrD,gCAAwB,+BAA+B,CAAC,CAAA;AA+BxD;IAGE,+BAAoB,WAAuB;QAH7C,iBAYC;QATqB,gBAAW,GAAX,WAAW,CAAY;QACzC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC;QAElC,WAAW,CAAC,mBAAmB,CAAC,SAAS,CACvC,UAAA,OAAO;YACL,6EAA6E;YAC7E,KAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAA;IACN,CAAC;IAxCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,QAAQ,EAAE,qYAeT;YACD,UAAU,EAAE,CAAC,2BAAS,EAAE,yBAAQ,EAAE,2BAAS,CAAC;YAC5C,SAAS,EAAE,EAAE;SAGd,CAAC;;6BAAA;IAmBF,4BAAC;AAAD,CAAC,AAZD,IAYC;AAZY,6BAAqB,wBAYjC,CAAA","sourcesContent":["import {Component} from \"@angular/core\";\nimport {AppService} from \"./app.service\";\n// import {RouteConfig, ROUTER_DIRECTIVES} from \"@angular/router-deprecated\";\n//import {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS} from \"@angular/router-deprecated\";\n\nimport {LoginPage} from \"./pages/login/login.component\";\nimport {ListPage} from \"./pages/list/list.component\";\nimport {ItemsPage} from \"./pages/items/items.component\";\n\n@Component({\n  selector: \"shopping2-app\",\n  template: `\n    <div [ngSwitch]=\"page\">\n      <div *ngSwitchCase=\"'login'\">\n        <page-login></page-login>\n      </div>\n      <div *ngSwitchCase=\"'list'\">\n        <page-list></page-list>\n      </div>\n      <div *ngSwitchCase=\"'items'\">\n        <page-items></page-items>\n      </div>\n      <div *ngSwitchDefault>\n        <page-login></page-login>\n      </div>\n    </div>\n  `,\n  directives: [LoginPage, ListPage, ItemsPage],\n  providers: []\n  //directives: [ROUTER_DIRECTIVES],\n  //providers: [HTTP_PROVIDERS, ROUTER_PROVIDERS]\n})\n// @RouteConfig([\n//   { path: \"/\", component: LoginPage, name: \"Home\" },\n//   { path: \"/home\", component: LoginPage, name: \"Home\" },\n//   { path: \"list\", component: ListPage },\n//   { path: \"list/:listId/items\", component: ItemsPage }\n// ])\nexport class Shopping2AppComponent {\n  public page: string;\n\n  constructor(private _appService: AppService) {\n    this.page = _appService.getPage();\n\n    _appService.pageDespatchSource$.subscribe(\n      pageObj => {\n        //console.log(\"Shopping2AppComponent subscribe pageDespatchSource\", pageObj);\n        this.page = pageObj.page;\n      })\n  }\n}\n"]}